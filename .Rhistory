#calculate within-country Gini-index in access rate ineqaulity
ine14[[Z]] = ineq(out14,type="Gini")
ine19[[Z]] = ineq(out19,type="Gini")
#plot and store Lorenz curve
Lorenz=Lc(out14, plot =F)
p14 <- Lorenz$p
L14 <- Lorenz$L
out_df14 <- data.frame(p14,L14)
Lorenz=Lc(out19, plot =F)
p19 <- Lorenz$p
L19 <- Lorenz$L
out_df19 <- data.frame(p19,L19)
databoth = merge(out_df19, out_df14, by.x="p19", by.y="p14")
databoth$difference = databoth$L19 - databoth$L14
lorenz[[Z]] = ggplot() +
theme_classic()+
geom_line(data = out_df14, aes(x=p14, y=L14, colour="red"), size=1, alpha=0.8) +
geom_line(data = out_df19, aes(x=p19, y=L19, color="darkblue"), size=1, alpha=0.8)+
geom_line(data = databoth, aes(x=p19, y=difference, color="black"), size=1, alpha=0.8)+
scale_color_viridis(name = "Legend", labels = c("Difference", "2019", "2014"), discrete = TRUE)+
geom_hline(yintercept = 0, alpha=0.5)+
scale_x_continuous(name="Cum. percentage of popul. \n from lowest to highest electrified", limits=c(0,1)) +
scale_y_continuous(name="Cum. percentage of \n national electr. access", limits=c(-0.1,1), sec.axis = sec_axis(trans= ~  .)) +
geom_abline()+
geom_point(data = out_df19, aes(x=p19, y=L19), size=0.3)+
geom_point(data = out_df14, aes(x=p14, y=L14), size=0.3)+
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6))
data = as.data.frame(shapefile)
}
pgrid = plot_grid(lorenz[['BDI']] + theme(legend.position="none"), lorenz[['KEN']] + theme(legend.position="none"), lorenz[['ETH']] + theme(legend.position="none"), lorenz[['TZA']] + theme(legend.position="none"), lorenz[['NGA']]  + theme(legend.position="none"), lorenz[['COD']] + theme(legend.position="none"), lorenz[['GHA']] + theme(legend.position="none"), lorenz[['ZAF']] + theme(legend.position="none"), lorenz[['AGO']] + theme(legend.position="none"),  labels=c("BDI", "KEN", "ETH", "TZA", "NGA", "COD", "GHA", "ZAF", "AGO"), label_size = 6, hjust= 0, ncol=3)
legend <- get_legend(lorenz[['BDI']])
p <- plot_grid(pgrid, legend, ncol = 2, rel_widths = c(0.4, .1))
ginis14 = as.data.frame(ine14)
ginis14 = melt(ginis14)
ginis19 = as.data.frame(ine19)
ginis19 = melt(ginis19)
ginis = data.frame(ginis14$variable, ginis14$value, ginis19$value, (ginis19$value-ginis14$value))
varnames<-c("ISO3", "Gini14", "Gini19", "DiffGini")
setnames(ginis,names(ginis),varnames )
ginis_access <- joinCountryData2Map(ginis, joinCode = "ISO3",
nameJoinColumn = "ISO3")
ginis_access@data=data.frame(ginis_access@data$ISO3, ginis_access@data$Gini14, ginis_access@data$Gini19, ginis_access@data$DiffGini)
writeOGR(layer="ginis_access2", obj =ginis_access,  driver = "ESRI Shapefile", dsn=getwd())
ginis_access = readOGR("ginis_access2.shp")
ginis_access@data$id = rownames(ginis_access@data)
poly_rgn_df <- fortify(ginis_access, region = 'id')
poly_rgn_df <- poly_rgn_df %>%
left_join(ginis_access@data, by = 'id')
cnames <- aggregate(cbind(long, lat) ~  g___ISO, data=poly_rgn_df,
FUN=function(x)mean(range(x)))
theme_clean <- function(base_size = 12) {
require(grid)
theme_grey(base_size) %+replace%
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks.length = unit(0,"cm"),
axis.ticks.margin = unit(0,"cm"),
panel.margin = unit(0,"lines"),
plot.margin = unit(c(0, 0, 0, 0), "lines"),
complete = TRUE
)}
poly_rgn_df = poly_rgn_df[complete.cases(poly_rgn_df), ]
##Urban inequality
shapefile = st_read("shapefile/gadm36_1.shp")
shapefile = merge(shapefile, elrates_urb, by=c("GID_1"), all=TRUE)
data = shapefile
#loop for graphs
colist=unique(elrates_urb$GID_0.x)
ine14=list()
ine19=list()
lorenz=list()
for (Z in colist){
datin=subset(data, data$GID_0.x== Z)
#sort data
out14 = sort(datin$elrate14*(datin$pop14/ave(datin$pop14, datin$GID_0.x, FUN=sum)))
out19 = sort(datin$elrate19*(datin$pop19/ave(datin$pop19, datin$GID_0.x, FUN=sum)))
#calculate within-country Gini-index in access rate ineqaulity
ine14[[Z]] = ineq(out14,type="Gini")
ine19[[Z]] = ineq(out19,type="Gini")
#plot and store Lorenz curve
Lorenz=Lc(out14, plot =F)
p14 <- Lorenz$p
L14 <- Lorenz$L
out_df14 <- data.frame(p14,L14)
Lorenz=Lc(out19, plot =F)
p19 <- Lorenz$p
L19 <- Lorenz$L
out_df19 <- data.frame(p19,L19)
databoth = merge(out_df19, out_df14, by.x="p19", by.y="p14")
databoth$difference = databoth$L19 - databoth$L14
lorenz[[Z]] = ggplot() +
theme_classic()+
geom_line(data = out_df14, aes(x=p14, y=L14, colour="red"), size=1, alpha=0.8) +
geom_line(data = out_df19, aes(x=p19, y=L19, color="darkblue"), size=1, alpha=0.8)+
geom_line(data = databoth, aes(x=p19, y=difference, color="black"), size=1, alpha=0.8)+
scale_color_viridis(name = "Legend", labels = c("Difference", "2019", "2014"), discrete = TRUE)+
geom_hline(yintercept = 0, alpha=0.5)+
scale_x_continuous(name="", limits=c(0,1)) +
scale_y_continuous(name="", limits=c(-0.1,1)) +
geom_abline()+
geom_point(data = out_df19, aes(x=p19, y=L19), size=0.3)+
geom_point(data = out_df14, aes(x=p14, y=L14), size=0.3)+
theme(axis.text=element_text(size=7.5),
axis.title=element_text(size=7.5))
data = as.data.frame(shapefile)
}
ginis14 = as.data.frame(ine14)
ginis14 = melt(ginis14)
ginis19 = as.data.frame(ine19)
ginis19 = melt(ginis19)
ginis = data.frame(ginis14$variable, ginis14$value, ginis19$value, (ginis19$value-ginis14$value))
varnames<-c("ISO3", "Gini14", "Gini19", "DiffGini")
setnames(ginis,names(ginis),varnames )
ppp = as.data.frame(merge(melt(ine19), melt(ine14), by="L1"))
ppp$change=ppp$value.x-ppp$value.y
pgrid = plot_grid(lorenz[['RWA']] + theme(legend.position="none"), lorenz[['KEN']] + theme(legend.position="none"), lorenz[['ETH']] + theme(legend.position="none"), lorenz[['NGA']]  + theme(legend.position="none"), lorenz[['COD']] + theme(legend.position="none"), lorenz[['UGA']] + theme(legend.position="none"), labels=c("RWA", "KEN", "ETH", "NGA", "COD", "UGA"), label_size = 8, hjust= 0, vjust = 1, ncol=3)
tit_urb <- ggdraw() + draw_label("Urban", size = 10)
pgrid_u = plot_grid(tit_urb, pgrid, ncol=1, rel_heights=c(0.05, 1), labels = c("A", ""), vjust = 0.4)
##Rural inequality
shapefile = st_read("shapefile/gadm36_1.shp")
shapefile = merge(shapefile, elrates_rur, by=c("GID_1"), all=TRUE)
data = shapefile
#loop for graphs
colist=unique(elrates_rur$GID_0.x)
ine14=list()
ine19=list()
lorenz=list()
for (Z in colist){
datin=subset(data, data$GID_0.x== Z)
#sort data
out14 = sort(datin$elrate14*(datin$pop14/ave(datin$pop14, datin$GID_0.x, FUN=sum)))
out19 = sort(datin$elrate19*(datin$pop19/ave(datin$pop19, datin$GID_0.x, FUN=sum)))
#calculate within-country Gini-index in access rate ineqaulity
ine14[[Z]] = ineq(out14,type="Gini")
ine19[[Z]] = ineq(out19,type="Gini")
#plot and store Lorenz curve
Lorenz=Lc(out14, plot =F)
p14 <- Lorenz$p
L14 <- Lorenz$L
out_df14 <- data.frame(p14,L14)
Lorenz=Lc(out19, plot =F)
p19 <- Lorenz$p
L19 <- Lorenz$L
out_df19 <- data.frame(p19,L19)
databoth = merge(out_df19, out_df14, by.x="p19", by.y="p14")
databoth$difference = databoth$L19 - databoth$L14
lorenz[[Z]] = ggplot() +
theme_classic()+
geom_line(data = out_df14, aes(x=p14, y=L14, colour="red"), size=1, alpha=0.8) +
geom_line(data = out_df19, aes(x=p19, y=L19, color="darkblue"), size=1, alpha=0.8)+
geom_line(data = databoth, aes(x=p19, y=difference, color="black"), size=1, alpha=0.8)+
scale_color_viridis(name = "Legend", labels = c("Difference", "2019", "2014"), discrete = TRUE)+
geom_hline(yintercept = 0, alpha=0.5)+
scale_x_continuous(name=" ", limits=c(0,1)) +
scale_y_continuous(name=" ", limits=c(-0.1,1)) +
geom_abline()+
geom_point(data = out_df19, aes(x=p19, y=L19), size=0.3)+
geom_point(data = out_df14, aes(x=p14, y=L14), size=0.3)+
theme(axis.text=element_text(size=7.5),
axis.title=element_text(size=7.5), legend.direction = "horizontal")
data = as.data.frame(shapefile)
}
ginis14 = as.data.frame(ine14)
ginis14 = melt(ginis14)
ginis19 = as.data.frame(ine19)
ginis19 = melt(ginis19)
ginis = data.frame(ginis14$variable, ginis14$value, ginis19$value, (ginis19$value-ginis14$value))
varnames<-c("ISO3", "Gini14", "Gini19", "DiffGini")
setnames(ginis,names(ginis),varnames )
ppp = as.data.frame(merge(melt(ine19), melt(ine14), by="L1"))
pgrid = plot_grid(lorenz[['RWA']] + theme(legend.position="none"), lorenz[['KEN']] + theme(legend.position="none"), lorenz[['ETH']] + theme(legend.position="none"), lorenz[['NGA']]  + theme(legend.position="none"), lorenz[['COD']] + theme(legend.position="none"), lorenz[['UGA']] + theme(legend.position="none"), labels=c("RWA", "KEN", "ETH", "NGA", "COD", "UGA"), label_size = 8, hjust= 0, vjust=1, ncol=3)
tit_rur <- ggdraw() + draw_label("Rural", size = 10)
pgrid = plot_grid(tit_rur, pgrid, ncol=1, rel_heights=c(0.05,1), labels = c("B", ""), vjust = 0.4)
pgrid = plot_grid(pgrid_u, pgrid, ncol=1, rel_heights=c(1,1))
xlab <- ggdraw() + draw_label("Cum. fraction of popul. from lowest to highest electrified", size = 10)
pgrid = plot_grid(pgrid, xlab, ncol=1, rel_heights=c(1, 0.05))
legend <- get_legend(lorenz[['RWA']])
p <- plot_grid(pgrid, legend, ncol = 1, rel_heights = c(1, 0.1))
ylab <- ggdraw() + draw_label("Cum. fraction of national electr. access", size = 10, angle = 90)
p <- plot_grid(ylab, p, ncol = 2, rel_widths = c(0.05, 1))
ggsave("figures/Figure_3.pdf", p, device = "pdf", width = 26, height = 26, units = "cm", scale=0.7)
ggsave("figures/Figure_3.pdf", p, device = "pdf", width = 26, height = 28, units = "cm", scale=0.7)
ggsave("figures/Figure_3.pdf", p, device = "pdf", width = 26, height = 32, units = "cm", scale=0.7)
ggsave("figures/Figure_3.pdf", p, device = "pdf", width = 26, height = 36, units = "cm", scale=0.7)
#Inequality in ACCESS: calculate indexes and produce Lorenz Curve graphs
shapefile = st_read("shapefile/gadm36_1.shp")
shapefile = merge(shapefile, elrates, by=c("GID_1"), all=TRUE)
data = shapefile
#loop for graphs
colist=unique(elrates$GID_0.x)
ine14=list()
ine19=list()
lorenz=list()
for (Z in colist){
datin=subset(data, data$GID_0.x== Z)
#sort data
out14 = sort(datin$elrate14*(datin$pop14/ave(datin$pop14, datin$GID_0.x, FUN=sum)))
out19 = sort(datin$elrate19*(datin$pop19/ave(datin$pop19, datin$GID_0.x, FUN=sum)))
#calculate within-country Gini-index in access rate ineqaulity
ine14[[Z]] = ineq(out14,type="Gini")
ine19[[Z]] = ineq(out19,type="Gini")
#plot and store Lorenz curve
Lorenz=Lc(out14, plot =F)
p14 <- Lorenz$p
L14 <- Lorenz$L
out_df14 <- data.frame(p14,L14)
Lorenz=Lc(out19, plot =F)
p19 <- Lorenz$p
L19 <- Lorenz$L
out_df19 <- data.frame(p19,L19)
databoth = merge(out_df19, out_df14, by.x="p19", by.y="p14")
databoth$difference = databoth$L19 - databoth$L14
lorenz[[Z]] = ggplot() +
theme_classic()+
geom_line(data = out_df14, aes(x=p14, y=L14, colour="red"), size=1, alpha=0.8) +
geom_line(data = out_df19, aes(x=p19, y=L19, color="darkblue"), size=1, alpha=0.8)+
geom_line(data = databoth, aes(x=p19, y=difference, color="black"), size=1, alpha=0.8)+
scale_color_viridis(name = "Legend", labels = c("Difference", "2019", "2014"), discrete = TRUE)+
geom_hline(yintercept = 0, alpha=0.5)+
scale_x_continuous(name="Cum. percentage of popul. \n from lowest to highest electrified", limits=c(0,1)) +
scale_y_continuous(name="Cum. percentage of \n national electr. access", limits=c(-0.1,1), sec.axis = sec_axis(trans= ~  .)) +
geom_abline()+
geom_point(data = out_df19, aes(x=p19, y=L19), size=0.3)+
geom_point(data = out_df14, aes(x=p14, y=L14), size=0.3)+
theme(axis.text=element_text(size=6),
axis.title=element_text(size=6))
data = as.data.frame(shapefile)
}
pgrid = plot_grid(lorenz[['BDI']] + theme(legend.position="none"), lorenz[['KEN']] + theme(legend.position="none"), lorenz[['ETH']] + theme(legend.position="none"), lorenz[['TZA']] + theme(legend.position="none"), lorenz[['NGA']]  + theme(legend.position="none"), lorenz[['COD']] + theme(legend.position="none"), lorenz[['GHA']] + theme(legend.position="none"), lorenz[['ZAF']] + theme(legend.position="none"), lorenz[['AGO']] + theme(legend.position="none"),  labels=c("BDI", "KEN", "ETH", "TZA", "NGA", "COD", "GHA", "ZAF", "AGO"), label_size = 6, hjust= 0, ncol=3)
legend <- get_legend(lorenz[['BDI']])
p <- plot_grid(pgrid, legend, ncol = 2, rel_widths = c(0.4, .1))
ginis14 = as.data.frame(ine14)
ginis14 = melt(ginis14)
ginis19 = as.data.frame(ine19)
ginis19 = melt(ginis19)
ginis = data.frame(ginis14$variable, ginis14$value, ginis19$value, (ginis19$value-ginis14$value))
varnames<-c("ISO3", "Gini14", "Gini19", "DiffGini")
setnames(ginis,names(ginis),varnames )
ginis_access <- joinCountryData2Map(ginis, joinCode = "ISO3",
nameJoinColumn = "ISO3")
ginis_access@data=data.frame(ginis_access@data$ISO3, ginis_access@data$Gini14, ginis_access@data$Gini19, ginis_access@data$DiffGini)
writeOGR(layer="ginis_access2", obj =ginis_access,  driver = "ESRI Shapefile", dsn=getwd())
ginis_access = readOGR("ginis_access2.shp")
ginis_access@data$id = rownames(ginis_access@data)
poly_rgn_df <- fortify(ginis_access, region = 'id')
poly_rgn_df <- poly_rgn_df %>%
left_join(ginis_access@data, by = 'id')
cnames <- aggregate(cbind(long, lat) ~  g___ISO, data=poly_rgn_df,
FUN=function(x)mean(range(x)))
theme_clean <- function(base_size = 12) {
require(grid)
theme_grey(base_size) %+replace%
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks.length = unit(0,"cm"),
axis.ticks.margin = unit(0,"cm"),
panel.margin = unit(0,"lines"),
plot.margin = unit(c(0, 0, 0, 0), "lines"),
complete = TRUE
)}
poly_rgn_df = poly_rgn_df[complete.cases(poly_rgn_df), ]
##Urban inequality
shapefile = st_read("shapefile/gadm36_1.shp")
shapefile = merge(shapefile, elrates_urb, by=c("GID_1"), all=TRUE)
data = shapefile
#loop for graphs
colist=unique(elrates_urb$GID_0.x)
ine14=list()
ine19=list()
lorenz=list()
for (Z in colist){
datin=subset(data, data$GID_0.x== Z)
#sort data
out14 = sort(datin$elrate14*(datin$pop14/ave(datin$pop14, datin$GID_0.x, FUN=sum)))
out19 = sort(datin$elrate19*(datin$pop19/ave(datin$pop19, datin$GID_0.x, FUN=sum)))
#calculate within-country Gini-index in access rate ineqaulity
ine14[[Z]] = ineq(out14,type="Gini")
ine19[[Z]] = ineq(out19,type="Gini")
#plot and store Lorenz curve
Lorenz=Lc(out14, plot =F)
p14 <- Lorenz$p
L14 <- Lorenz$L
out_df14 <- data.frame(p14,L14)
Lorenz=Lc(out19, plot =F)
p19 <- Lorenz$p
L19 <- Lorenz$L
out_df19 <- data.frame(p19,L19)
databoth = merge(out_df19, out_df14, by.x="p19", by.y="p14")
databoth$difference = databoth$L19 - databoth$L14
lorenz[[Z]] = ggplot() +
theme_classic()+
geom_line(data = out_df14, aes(x=p14, y=L14, colour="red"), size=1, alpha=0.8) +
geom_line(data = out_df19, aes(x=p19, y=L19, color="darkblue"), size=1, alpha=0.8)+
geom_line(data = databoth, aes(x=p19, y=difference, color="black"), size=1, alpha=0.8)+
scale_color_viridis(name = "Legend", labels = c("Difference", "2019", "2014"), discrete = TRUE)+
geom_hline(yintercept = 0, alpha=0.5)+
scale_x_continuous(name="", limits=c(0,1)) +
scale_y_continuous(name="", limits=c(-0.1,1)) +
geom_abline()+
geom_point(data = out_df19, aes(x=p19, y=L19), size=0.3)+
geom_point(data = out_df14, aes(x=p14, y=L14), size=0.3)+
theme(axis.text=element_text(size=7.5),
axis.title=element_text(size=7.5))
data = as.data.frame(shapefile)
}
ginis14 = as.data.frame(ine14)
ginis14 = melt(ginis14)
ginis19 = as.data.frame(ine19)
ginis19 = melt(ginis19)
ginis = data.frame(ginis14$variable, ginis14$value, ginis19$value, (ginis19$value-ginis14$value))
varnames<-c("ISO3", "Gini14", "Gini19", "DiffGini")
setnames(ginis,names(ginis),varnames )
ppp = as.data.frame(merge(melt(ine19), melt(ine14), by="L1"))
ppp$change=ppp$value.x-ppp$value.y
pgrid = plot_grid(lorenz[['RWA']] + theme(legend.position="none"), lorenz[['KEN']] + theme(legend.position="none"), lorenz[['ETH']] + theme(legend.position="none"), lorenz[['NGA']]  + theme(legend.position="none"), lorenz[['COD']] + theme(legend.position="none"), lorenz[['UGA']] + theme(legend.position="none"), labels=c("RWA", "KEN", "ETH", "NGA", "COD", "UGA"), label_size = 8, hjust= 0, vjust = 1, ncol=3)
tit_urb <- ggdraw() + draw_label("Urban", size = 10)
pgrid_u = plot_grid(tit_urb, pgrid, ncol=1, rel_heights=c(0.05, 1), labels = c("A", ""), vjust = 0.2)
##Rural inequality
shapefile = st_read("shapefile/gadm36_1.shp")
shapefile = merge(shapefile, elrates_rur, by=c("GID_1"), all=TRUE)
data = shapefile
#loop for graphs
colist=unique(elrates_rur$GID_0.x)
ine14=list()
ine19=list()
lorenz=list()
for (Z in colist){
datin=subset(data, data$GID_0.x== Z)
#sort data
out14 = sort(datin$elrate14*(datin$pop14/ave(datin$pop14, datin$GID_0.x, FUN=sum)))
out19 = sort(datin$elrate19*(datin$pop19/ave(datin$pop19, datin$GID_0.x, FUN=sum)))
#calculate within-country Gini-index in access rate ineqaulity
ine14[[Z]] = ineq(out14,type="Gini")
ine19[[Z]] = ineq(out19,type="Gini")
#plot and store Lorenz curve
Lorenz=Lc(out14, plot =F)
p14 <- Lorenz$p
L14 <- Lorenz$L
out_df14 <- data.frame(p14,L14)
Lorenz=Lc(out19, plot =F)
p19 <- Lorenz$p
L19 <- Lorenz$L
out_df19 <- data.frame(p19,L19)
databoth = merge(out_df19, out_df14, by.x="p19", by.y="p14")
databoth$difference = databoth$L19 - databoth$L14
lorenz[[Z]] = ggplot() +
theme_classic()+
geom_line(data = out_df14, aes(x=p14, y=L14, colour="red"), size=1, alpha=0.8) +
geom_line(data = out_df19, aes(x=p19, y=L19, color="darkblue"), size=1, alpha=0.8)+
geom_line(data = databoth, aes(x=p19, y=difference, color="black"), size=1, alpha=0.8)+
scale_color_viridis(name = "Legend", labels = c("Difference", "2019", "2014"), discrete = TRUE)+
geom_hline(yintercept = 0, alpha=0.5)+
scale_x_continuous(name=" ", limits=c(0,1)) +
scale_y_continuous(name=" ", limits=c(-0.1,1)) +
geom_abline()+
geom_point(data = out_df19, aes(x=p19, y=L19), size=0.3)+
geom_point(data = out_df14, aes(x=p14, y=L14), size=0.3)+
theme(axis.text=element_text(size=7.5),
axis.title=element_text(size=7.5), legend.direction = "horizontal")
data = as.data.frame(shapefile)
}
ginis14 = as.data.frame(ine14)
ginis14 = melt(ginis14)
ginis19 = as.data.frame(ine19)
ginis19 = melt(ginis19)
ginis = data.frame(ginis14$variable, ginis14$value, ginis19$value, (ginis19$value-ginis14$value))
varnames<-c("ISO3", "Gini14", "Gini19", "DiffGini")
setnames(ginis,names(ginis),varnames )
ppp = as.data.frame(merge(melt(ine19), melt(ine14), by="L1"))
pgrid = plot_grid(lorenz[['RWA']] + theme(legend.position="none"), lorenz[['KEN']] + theme(legend.position="none"), lorenz[['ETH']] + theme(legend.position="none"), lorenz[['NGA']]  + theme(legend.position="none"), lorenz[['COD']] + theme(legend.position="none"), lorenz[['UGA']] + theme(legend.position="none"), labels=c("RWA", "KEN", "ETH", "NGA", "COD", "UGA"), label_size = 8, hjust= 0, vjust=1, ncol=3)
tit_rur <- ggdraw() + draw_label("Rural", size = 10)
pgrid = plot_grid(tit_rur, pgrid, ncol=1, rel_heights=c(0.05,1), labels = c("B", ""), vjust = 0.4)
pgrid = plot_grid(pgrid_u, pgrid, ncol=1, rel_heights=c(1,1))
xlab <- ggdraw() + draw_label("Cum. fraction of popul. from lowest to highest electrified", size = 10)
pgrid = plot_grid(pgrid, xlab, ncol=1, rel_heights=c(1, 0.05))
legend <- get_legend(lorenz[['RWA']])
p <- plot_grid(pgrid, legend, ncol = 1, rel_heights = c(1, 0.1))
ylab <- ggdraw() + draw_label("Cum. fraction of national electr. access", size = 10, angle = 90)
p <- plot_grid(ylab, p, ncol = 2, rel_widths = c(0.05, 1))
ggsave("figures/Figure_3.pdf", p, device = "pdf", width = 26, height = 36, units = "cm", scale=0.7)
shapefile = st_read("shapefile/gadm36_1.shp")
shapefile = merge(shapefile, elrates_urb, by=c("GID_1"), all=TRUE)
data = shapefile
#loop for graphs
colist=unique(elrates_urb$GID_0.x)
ine14=list()
ine19=list()
lorenz=list()
for (Z in colist){
datin=subset(data, data$GID_0.x== Z)
#sort data
out14 = sort(datin$elrate14*(datin$pop14/ave(datin$pop14, datin$GID_0.x, FUN=sum)))
out19 = sort(datin$elrate19*(datin$pop19/ave(datin$pop19, datin$GID_0.x, FUN=sum)))
#calculate within-country Gini-index in access rate ineqaulity
ine14[[Z]] = ineq(out14,type="Gini")
ine19[[Z]] = ineq(out19,type="Gini")
#plot and store Lorenz curve
Lorenz=Lc(out14, plot =F)
p14 <- Lorenz$p
L14 <- Lorenz$L
out_df14 <- data.frame(p14,L14)
Lorenz=Lc(out19, plot =F)
p19 <- Lorenz$p
L19 <- Lorenz$L
out_df19 <- data.frame(p19,L19)
databoth = merge(out_df19, out_df14, by.x="p19", by.y="p14")
databoth$difference = databoth$L19 - databoth$L14
lorenz[[Z]] = ggplot() +
theme_classic()+
geom_line(data = out_df14, aes(x=p14, y=L14, colour="red"), size=1, alpha=0.8) +
geom_line(data = out_df19, aes(x=p19, y=L19, color="darkblue"), size=1, alpha=0.8)+
geom_line(data = databoth, aes(x=p19, y=difference, color="black"), size=1, alpha=0.8)+
scale_color_viridis(name = "Legend", labels = c("Difference", "2019", "2014"), discrete = TRUE)+
geom_hline(yintercept = 0, alpha=0.5)+
scale_x_continuous(name="", limits=c(0,1)) +
scale_y_continuous(name="", limits=c(-0.1,1)) +
geom_abline()+
geom_point(data = out_df19, aes(x=p19, y=L19), size=0.3)+
geom_point(data = out_df14, aes(x=p14, y=L14), size=0.3)+
theme(axis.text=element_text(size=7.5),
axis.title=element_text(size=7.5))
data = as.data.frame(shapefile)
}
ginis14 = as.data.frame(ine14)
ginis14 = melt(ginis14)
ginis19 = as.data.frame(ine19)
ginis19 = melt(ginis19)
ginis = data.frame(ginis14$variable, ginis14$value, ginis19$value, (ginis19$value-ginis14$value))
varnames<-c("ISO3", "Gini14", "Gini19", "DiffGini")
setnames(ginis,names(ginis),varnames )
ppp = as.data.frame(merge(melt(ine19), melt(ine14), by="L1"))
ppp$change=ppp$value.x-ppp$value.y
pgrid = plot_grid(lorenz[['RWA']] + theme(legend.position="none"), lorenz[['KEN']] + theme(legend.position="none"), lorenz[['ETH']] + theme(legend.position="none"), lorenz[['NGA']]  + theme(legend.position="none"), lorenz[['COD']] + theme(legend.position="none"), lorenz[['UGA']] + theme(legend.position="none"), labels=c("RWA", "KEN", "ETH", "NGA", "COD", "UGA"), label_size = 8, hjust= 0, vjust = 1, ncol=3)
tit_urb <- ggdraw() + draw_label("Urban", size = 10)
pgrid_u = plot_grid(tit_urb, pgrid, ncol=1, rel_heights=c(0.05, 1), labels = c("A", ""), vjust = 0.1)
pgrid_u
pgrid_u = plot_grid(tit_urb, pgrid, ncol=1, rel_heights=c(0.05, 1), labels = c("A", ""), vjust = -0.25)
pgrid_u
pgrid_u = plot_grid(tit_urb, pgrid, ncol=1, rel_heights=c(0.05, 1), labels = c("A", ""), vjust = -0.1)
pgrid_u
pgrid_u = plot_grid(tit_urb, pgrid, ncol=1, rel_heights=c(0.05, 1), labels = c("A", ""))
pgrid_u
##Rural inequality
shapefile = st_read("shapefile/gadm36_1.shp")
shapefile = merge(shapefile, elrates_rur, by=c("GID_1"), all=TRUE)
data = shapefile
#loop for graphs
colist=unique(elrates_rur$GID_0.x)
ine14=list()
ine19=list()
lorenz=list()
for (Z in colist){
datin=subset(data, data$GID_0.x== Z)
#sort data
out14 = sort(datin$elrate14*(datin$pop14/ave(datin$pop14, datin$GID_0.x, FUN=sum)))
out19 = sort(datin$elrate19*(datin$pop19/ave(datin$pop19, datin$GID_0.x, FUN=sum)))
#calculate within-country Gini-index in access rate ineqaulity
ine14[[Z]] = ineq(out14,type="Gini")
ine19[[Z]] = ineq(out19,type="Gini")
#plot and store Lorenz curve
Lorenz=Lc(out14, plot =F)
p14 <- Lorenz$p
L14 <- Lorenz$L
out_df14 <- data.frame(p14,L14)
Lorenz=Lc(out19, plot =F)
p19 <- Lorenz$p
L19 <- Lorenz$L
out_df19 <- data.frame(p19,L19)
databoth = merge(out_df19, out_df14, by.x="p19", by.y="p14")
databoth$difference = databoth$L19 - databoth$L14
lorenz[[Z]] = ggplot() +
theme_classic()+
geom_line(data = out_df14, aes(x=p14, y=L14, colour="red"), size=1, alpha=0.8) +
geom_line(data = out_df19, aes(x=p19, y=L19, color="darkblue"), size=1, alpha=0.8)+
geom_line(data = databoth, aes(x=p19, y=difference, color="black"), size=1, alpha=0.8)+
scale_color_viridis(name = "Legend", labels = c("Difference", "2019", "2014"), discrete = TRUE)+
geom_hline(yintercept = 0, alpha=0.5)+
scale_x_continuous(name=" ", limits=c(0,1)) +
scale_y_continuous(name=" ", limits=c(-0.1,1)) +
geom_abline()+
geom_point(data = out_df19, aes(x=p19, y=L19), size=0.3)+
geom_point(data = out_df14, aes(x=p14, y=L14), size=0.3)+
theme(axis.text=element_text(size=7.5),
axis.title=element_text(size=7.5), legend.direction = "horizontal")
data = as.data.frame(shapefile)
}
ginis14 = as.data.frame(ine14)
ginis14 = melt(ginis14)
ginis19 = as.data.frame(ine19)
ginis19 = melt(ginis19)
ginis = data.frame(ginis14$variable, ginis14$value, ginis19$value, (ginis19$value-ginis14$value))
varnames<-c("ISO3", "Gini14", "Gini19", "DiffGini")
setnames(ginis,names(ginis),varnames )
ppp = as.data.frame(merge(melt(ine19), melt(ine14), by="L1"))
pgrid = plot_grid(lorenz[['RWA']] + theme(legend.position="none"), lorenz[['KEN']] + theme(legend.position="none"), lorenz[['ETH']] + theme(legend.position="none"), lorenz[['NGA']]  + theme(legend.position="none"), lorenz[['COD']] + theme(legend.position="none"), lorenz[['UGA']] + theme(legend.position="none"), labels=c("RWA", "KEN", "ETH", "NGA", "COD", "UGA"), label_size = 8, hjust= 0, vjust=1, ncol=3)
tit_rur <- ggdraw() + draw_label("Rural", size = 10)
pgrid = plot_grid(tit_rur, pgrid, ncol=1, rel_heights=c(0.05,1), labels = c("B", ""), vjust = 0.4)
pgrid = plot_grid(pgrid_u, pgrid, ncol=1, rel_heights=c(1,1))
xlab <- ggdraw() + draw_label("Cum. fraction of popul. from lowest to highest electrified", size = 10)
pgrid = plot_grid(pgrid, xlab, ncol=1, rel_heights=c(1, 0.05))
legend <- get_legend(lorenz[['RWA']])
p <- plot_grid(pgrid, legend, ncol = 1, rel_heights = c(1, 0.1))
ylab <- ggdraw() + draw_label("Cum. fraction of national electr. access", size = 10, angle = 90)
p <- plot_grid(ylab, p, ncol = 2, rel_widths = c(0.05, 1))
ggsave("figures/Figure_3.pdf", p, device = "pdf", width = 26, height = 36, units = "cm", scale=0.7)
